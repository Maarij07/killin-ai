// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/activity-logs" | "/admin/admins" | "/admin/assistant-management" | "/admin/login" | "/admin/logs" | "/admin/settings" | "/admin/user-management" | "/admins" | "/logs" | "/manage-assistants" | "/manage-users" | "/settings"
type AppRouteHandlerRoutes = "/api/confirm-payment" | "/api/debug/env" | "/api/debug/stripe-test" | "/api/stripe/cleanup-session" | "/api/stripe/create-checkout-session" | "/api/stripe/create-payment-intent" | "/api/stripe/payment-success" | "/api/stripe/test-config" | "/api/stripe/webhook"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/admin/login"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/activity-logs": {}
  "/admin/admins": {}
  "/admin/assistant-management": {}
  "/admin/login": {}
  "/admin/logs": {}
  "/admin/settings": {}
  "/admin/user-management": {}
  "/admins": {}
  "/api/confirm-payment": {}
  "/api/debug/env": {}
  "/api/debug/stripe-test": {}
  "/api/stripe/cleanup-session": {}
  "/api/stripe/create-checkout-session": {}
  "/api/stripe/create-payment-intent": {}
  "/api/stripe/payment-success": {}
  "/api/stripe/test-config": {}
  "/api/stripe/webhook": {}
  "/logs": {}
  "/manage-assistants": {}
  "/manage-users": {}
  "/settings": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/admin/login": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
